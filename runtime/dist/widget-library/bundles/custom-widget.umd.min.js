!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common/http"),require("@angular/core"),require("echarts"),require("echarts-simple-transform"),require("@c8y/client"),require("@c8y/ngx-components"),require("ngx-echarts")):"function"==typeof define&&define.amd?define("smart-echart-runtime-widget",["exports","@angular/common/http","@angular/core","echarts","echarts-simple-transform","@c8y/client","@c8y/ngx-components","ngx-echarts"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["smart-echart-runtime-widget"]={},e.ng.common.http,e.ng.core,e.echarts,e.simpleTransform,e.client,e["@c8y/ngx-components"],e.ngxEcharts)}(this,(function(e,t,i,a,r,n,o,s){"use strict";function l(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(i){if("default"!==i){var a=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(t,i,a.get?a:{enumerable:!0,get:function(){return e[i]}})}})),t.default=e,Object.freeze(t)}var c=l(t),p=l(i),d=l(a),u=l(r),g=function(){function e(e){this.http=e}return e.prototype.getAPIData=function(e){return this.http.get(e)},e}();g.ɵprov=p.ɵɵdefineInjectable({factory:function(){return new g(p.ɵɵinject(c.HttpClient))},token:g,providedIn:"root"}),g.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],g.ctorParameters=function(){return[{type:t.HttpClient}]};function h(e,t,i,a){return new(i||(i=Promise))((function(r,n){function o(e){try{l(a.next(e))}catch(e){n(e)}}function s(e){try{l(a.throw(e))}catch(e){n(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,s)}l((a=a.apply(e,t||[])).next())}))}function m(e,t){var i,a,r,n,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return n={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function s(n){return function(s){return function(n){if(i)throw new TypeError("Generator is already executing.");for(;o;)try{if(i=1,a&&(r=2&n[0]?a.return:n[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,n[1])).done)return r;switch(a=0,r&&(n=[2&n[0],r.value]),n[0]){case 0:case 1:r=n;break;case 4:return o.label++,{value:n[1],done:!1};case 5:o.label++,a=n[1],n=[0];continue;case 7:n=o.ops.pop(),o.trys.pop();continue;default:if(!(r=o.trys,(r=r.length>0&&r[r.length-1])||6!==n[0]&&2!==n[0])){o=0;continue}if(3===n[0]&&(!r||n[1]>r[0]&&n[1]<r[3])){o.label=n[1];break}if(6===n[0]&&o.label<r[1]){o.label=r[1],r=n;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(n);break}r[2]&&o.ops.pop(),o.trys.pop();continue}n=t.call(e,o)}catch(e){n=[6,e],a=0}finally{i=r=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,s])}}}Object.create;function f(e){var t="function"==typeof Symbol&&Symbol.iterator,i=t&&e[t],a=0;if(i)return i.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function y(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var a,r,n=i.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(a=n.next()).done;)o.push(a.value)}catch(e){r={error:e}}finally{try{a&&!a.done&&(i=n.return)&&i.call(n)}finally{if(r)throw r.error}}return o}function x(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(y(arguments[t]));return e}Object.create;function v(e,t){var i,a,r,n=Array.isArray(e)?e:[e],o=[];try{for(var s=f(n),l=s.next();!l.done;l=s.next()){var c=l.value.split("."),p=t;if(1===c.length)o.push(p[c[0]]);else{for(var d=void 0,u=0;u<c.length;u++){d=p[c[u]],r=d,"[object Object]"===Object.prototype.toString.call(r)?p=d:c.length}o.push(d)}}}catch(e){i={error:e}}finally{try{l&&!l.done&&(a=s.return)&&a.call(s)}finally{if(i)throw i.error}}return n.length>1?o.join(" "):o[0]}var b=function(){function e(e,t,i){this.chartService=e,this.realTimeService=t,this.fetchClient=i,this.chartOption={},this.allSubscriptions=[],this.realtime=!0,this.deviceId="",this.isDatahubPostCall=!1}return e.prototype.ngOnInit=function(){this.chartDiv=this.mapDivRef.nativeElement,this.createChart(this.config)},e.prototype.dataFromUser=function(e){this.createChart(e)},e.prototype.reloadData=function(e){this.createChart(e)},e.prototype.createChart=function(e){return h(this,void 0,void 0,(function(){var t,a,r,n,o,s,l,c,p,g,h,f,y,b,D,A,S,w;return m(this,(function(m){switch(m.label){case 0:return(t=d.init(this.chartDiv)).showLoading(),e.showApiInput?(a=this,[4,this.chartService.getAPIData(e.apiUrl).toPromise()]):[3,2];case 1:return a.serviceData=m.sent(),[3,6];case 2:return e.showDatahubInput?(r={sql:e.sqlQuery,limit:100,format:"PANDAS"},[4,this.fetchClient.fetch(e.apiUrl,{body:JSON.stringify(r),method:"POST"})]):[3,5];case 3:return n=m.sent(),o=this,[4,n.json()];case 4:return o.serviceData=m.sent(),this.isDatahubPostCall=!0,[3,6];case 5:i.isDevMode()&&console.log("No Datasource selected"),m.label=6;case 6:if(this.serviceData)if(t.hideLoading(),0!==e.aggrList.length||this.isDatahubPostCall)if(0===e.aggrList.length&&this.isDatahubPostCall){if(h=this.getResultDimesions(e.aggrList,e.groupBy),f=[],y=void 0,b=null,this.serviceData=x([this.serviceData.columns],this.serviceData.data),"bar"===e.type||"line"===e.type)f=this.getDatasetDimensions(e),S=void 0,w=void 0,A="",D="",1===e.yAxisDimension.split(",").length?(S=e.yAxisDimension,f.push(S),A=this.getFormattedName(e.yAxisDimension)):(S=e.yAxisDimension.split(","),f=x(f,S),A=""),1===e.xAxisDimension.split(",").length?(w=e.xAxisDimension,f.push(w),D=this.getFormattedName(e.xAxisDimension)):(w=e.xAxisDimension.split(","),f=x(f,w),D=""),-1===f.indexOf(e.groupBy)&&f.push(e.groupBy),y=this.getEncodeData(e,b,w,S),this.chartOption={dataset:[{id:"raw_data",source:this.serviceData}],title:{text:e.title,left:"center"},tooltip:{trigger:"axis",axisPointer:{type:"cross"},confine:!0},xAxis:{name:e.xAxisDimension,nameLocation:"middle",nameGap:30,scale:!0,type:this.getXAxisType(e)},yAxis:{type:this.getYAxisType(e)},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},dataZoom:this.showZoomFeature(e.sliderZoom),toolbox:{feature:{dataZoom:{show:!0},saveAsImage:{},restore:{}}},series:y},i.isDevMode()&&console.log("Baror Line chart for Datahub without aggregation",this.chartOption);else if("scatter"===e.type)-1===(f=this.getDatasetDimensions(e)).indexOf(e.groupBy)&&f.push(e.groupBy),D="",A="",D=e.xAxisDimension.split(",").length>1?"":this.getFormattedName(e.xAxisDimension),A=e.yAxisDimension.split(",").length>1?"":this.getFormattedName(e.yAxisDimension),y=this.getEncodeData(e,b),this.chartOption={dataset:[{id:"raw_data",source:this.serviceData}],title:{text:e.title,left:"center"},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},xAxis:{name:D,nameLocation:"middle",nameGap:50,type:this.getXAxisType(e)},yAxis:{name:A,nameLocation:"middle",nameGap:70,type:this.getYAxisType(e)},tooltip:{trigger:"axis",axisPointer:{type:"cross"},confine:!0},dataZoom:this.showZoomFeature(e.sliderZoom),toolbox:{feature:{dataZoom:{show:!0,yAxisIndex:"none"},restore:{},saveAsImage:{}}},series:y},i.isDevMode()&&console.log("Scatter chart without Aggregation for Datahub",this.chartOption);else if("pie"===e.type)f=[e.pieSlicenName,e.pieSliceValue],y=this.getEncodeData(e,b),this.chartOption={dataset:[{id:"raw_data",source:this.serviceData}],title:{text:e.title,left:"center"},tooltip:{trigger:"item",confine:!0},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},legend:{icon:e.legend.icon,width:330,top:"10%",left:"left",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},toolbox:{feature:{saveAsImage:{}}},series:y},i.isDevMode()&&console.log("Pie chart without Aggregation for Datahub",this.chartOption);else if("polar"===e.type)S=void 0,w=void 0,1===e.yAxisDimension.split(",").length?(S=e.yAxisDimension,f.push(S)):(S=e.yAxisDimension.split(","),f=x(f,S)),1===e.xAxisDimension.split(",").length?(w=e.xAxisDimension,f.push(w)):(w=e.xAxisDimension.split(","),f=x(f,w)),-1===f.indexOf(e.groupBy)&&f.push(e.groupBy),y=this.getEncodeData(e,b,w,S),this.chartOption={dataset:[{id:"raw_data",source:this.serviceData}],title:{text:e.title,left:"center"},tooltip:{trigger:"axis",axisPointer:{type:"cross"}},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},angleAxis:{type:"value",startAngle:0},radiusAxis:{min:0},polar:{},legend:{icon:e.legend.icon,width:330,top:"10%",left:"left",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},toolbox:{feature:{saveAsImage:{}}},series:y},i.isDevMode()&&console.log("Polar chart without Aggregation for Datahub",this.chartOption);else if("radar"===e.type){for(f=x(e.radarDimensions),this.seriesData=this.getRadarSeriesData(e),c=this.serviceData[0].indexOf(e.xAxisDimension),p=[],g=1;g<this.serviceData.length;g++)p.push({name:this.serviceData[g][c]});this.chartOption={title:{text:e.title,left:"center"},legend:{icon:e.legend.icon,width:330,top:"10%",left:"left",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},tooltip:{trigger:"item"},radar:{indicator:p,radius:100},series:this.seriesData,toolbox:{feature:{saveAsImage:{}}}},i.isDevMode()&&console.log("Radar Chart without Aggregation for Datahub",this.chartOption)}}else e.aggrList.length>0&&(d.registerTransform(u.aggregate),h=this.getResultDimesions(e.aggrList,e.groupBy),f=[],y=void 0,b="_aggregate",this.isDatahubPostCall?this.serviceData=x([this.serviceData.columns],this.serviceData.data):this.serviceData=this.serviceData[e.listName],"bar"===e.type||"line"===e.type?(S=void 0,w=void 0,D="",A="",this.isDatahubPostCall?f=null:(1===e.yAxisDimension.split(",").length?(S=e.yAxisDimension,f.push(S),A=this.getFormattedName(e.yAxisDimension)):(S=e.yAxisDimension.split(","),f=x(f,S),A=""),1===e.xAxisDimension.split(",").length?(w=e.xAxisDimension,f.push(w),D=this.getFormattedName(e.xAxisDimension)):(w=e.xAxisDimension.split(","),f=x(f,w),D=""),-1===f.indexOf(e.groupBy)&&f.push(e.groupBy)),y=this.getEncodeData(e,b,w,S),this.chartOption={dataset:[{id:"raw_data",dimensions:f,source:this.serviceData},{id:"_aggregate",fromDatasetId:"raw_data",transform:[{type:"ecSimpleTransform:aggregate",config:{resultDimensions:h,groupBy:e.groupBy},print:!0}]}],title:{text:e.title,left:"center"},tooltip:{trigger:"axis",axisPointer:{type:"cross"},confine:!0},xAxis:{name:D,nameLocation:"middle",nameGap:30,scale:!0,type:this.getXAxisType(e)},yAxis:{type:this.getYAxisType(e),name:A},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},dataZoom:this.showZoomFeature(e.sliderZoom),toolbox:{feature:{dataZoom:{show:!0},saveAsImage:{},restore:{}}},series:y},i.isDevMode()&&console.log("Aggregate Bar or Line chart",this.chartOption)):"scatter"===e.type?(this.isDatahubPostCall?f=null:-1===(f=this.getDatasetDimensions(e)).indexOf(e.groupBy)&&f.push(e.groupBy),D="",A="",D=e.xAxisDimension.split(",").length>1?"":this.getFormattedName(e.xAxisDimension),A=e.yAxisDimension.split(",").length>1?"":this.getFormattedName(e.yAxisDimension),y=this.getEncodeData(e,b),this.chartOption={dataset:[{id:"raw_data",dimensions:f,source:this.serviceData},{id:"_aggregate",fromDatasetId:"raw_data",transform:[{type:"ecSimpleTransform:aggregate",config:{resultDimensions:h,groupBy:e.groupBy},print:!0}]}],title:{text:e.title,left:"center"},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},xAxis:{name:D,nameLocation:"middle",nameGap:50,type:this.getXAxisType(e)},yAxis:{name:A,nameLocation:"middle",nameGap:70,type:this.getYAxisType(e)},tooltip:{trigger:"axis",axisPointer:{type:"cross"}},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},dataZoom:this.showZoomFeature(e.sliderZoom),toolbox:{feature:{dataZoom:{show:!0,yAxisIndex:"none"},restore:{},saveAsImage:{}}},series:y},i.isDevMode()&&console.log("Aggregate Scatter chart",this.chartOption)):"pie"===e.type?(f=this.isDatahubPostCall?null:[e.pieSlicenName,e.pieSliceValue],y=this.getEncodeData(e,b),this.chartOption={dataset:[{id:"raw_data",dimensions:f,source:this.serviceData},{id:"_aggregate",fromDatasetId:"raw_data",transform:[{type:"ecSimpleTransform:aggregate",config:{resultDimensions:h,groupBy:e.groupBy},print:!0}]}],title:{text:e.title,left:"center"},tooltip:{trigger:"item",confine:!0},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},legend:{selected:{detail:!1},type:"scroll",icon:e.legend.icon,left:"left",top:"10%",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},toolbox:{feature:{saveAsImage:{}}},series:y},i.isDevMode()&&console.log("Aggregate Pie chart",this.chartOption)):"polar"===e.type&&(S=void 0,w=void 0,this.isDatahubPostCall?f=null:(1===e.yAxisDimension.split(",").length?(S=e.yAxisDimension,f.push(S)):(S=e.yAxisDimension.split(","),f=x(f,S)),1===e.xAxisDimension.split(",").length?(w=e.xAxisDimension,f.push(w)):(w=e.xAxisDimension.split(","),f=x(f,w)),-1===f.indexOf(e.groupBy)&&f.push(e.groupBy)),y=this.getEncodeData(e,b,w,S),this.chartOption={dataset:[{id:"raw_data",dimensions:f,source:this.serviceData},{id:"_aggregate",fromDatasetId:"raw_data",transform:[{type:"ecSimpleTransform:aggregate",config:{resultDimensions:h,groupBy:e.groupBy},print:!0}]}],title:{text:e.title,left:"center"},tooltip:{trigger:"axis",axisPointer:{type:"cross"}},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},angleAxis:{type:"value",startAngle:0},radiusAxis:{min:0},polar:{},legend:{selected:{detail:!1},type:"scroll",icon:e.legend.icon,left:"left",top:"10%",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},toolbox:{feature:{saveAsImage:{}}},series:y},i.isDevMode()&&console.log("Aggregate Polar chart",this.chartOption)));else"pie"===e.type?(this.seriesData=this.getPieChartSeriesData(e),this.chartOption={title:{text:e.title,left:"center"},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},xAxis:{show:!1,data:this.serviceData[e.listName].map((function(t){return t[e.xAxisDimension]}))},yAxis:{type:"value"},tooltip:{trigger:"item"},series:this.seriesData,toolbox:{feature:{saveAsImage:{}}}},i.isDevMode()&&console.log("Pie Chart For API",this.chartOption)):"polar"===e.type?(this.seriesData=this.getPolarChartSeriesData(e),this.chartOption={title:{text:e.title,left:"center"},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},polar:{},tooltip:{trigger:"axis",axisPointer:{type:"cross"},confine:!0},angleAxis:{type:"value",startAngle:0},radiusAxis:{min:0},series:this.seriesData,toolbox:{feature:{saveAsImage:{}}}},i.isDevMode()&&console.log("Polar Chart For API",this.chartOption)):"scatter"===e.type?(s=void 0,l=void 0,"horizontalScatter"===e.layout?(s={name:this.getFormattedName(e.xAxisDimension),nameLocation:"middle",nameGap:30,type:this.getXAxisType(e)},l={name:this.getFormattedName(e.yAxisDimension),nameLocation:"middle",nameGap:70,data:this.serviceData[e.listName].map((function(t){return t[e.yAxisDimension]})),type:this.getYAxisType(e)}):(s={name:this.getFormattedName(e.xAxisDimension),nameLocation:"middle",nameGap:30,data:this.serviceData[e.listName].map((function(t){return t[e.xAxisDimension]})),type:this.getXAxisType(e)},l={name:this.getFormattedName(e.yAxisDimension),nameLocation:"middle",nameGap:70,type:this.getYAxisType(e)}),this.seriesData=this.getScatterChartSeriesData(e),this.chartOption={title:{text:e.title,left:"center"},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},xAxis:s,yAxis:l,tooltip:{trigger:"axis",axisPointer:{type:"cross"}},toolbox:{feature:{dataZoom:{show:e.boxZoom,yAxisIndex:"none"},restore:{},saveAsImage:{}}},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},dataZoom:this.showZoomFeature(e.sliderZoom),series:this.seriesData},i.isDevMode()&&console.log("Scatter chart for API",this.chartOption)):"radar"===e.type?(this.seriesData=this.getRadarSeriesData(e),this.chartOption={title:{text:e.title,left:"center"},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},tooltip:{trigger:"item",confine:!0},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},radar:{indicator:this.serviceData[e.listName].map((function(t){return{name:t[e.xAxisDimension]}})),radius:100},series:this.seriesData,toolbox:{feature:{saveAsImage:{}}}},i.isDevMode()&&console.log("Radar chart for API",this.chartOption)):"line"!==e.type&&"bar"!==e.type||"simpleHorizontalBar"===e.layout||"stackedHorizontalBar"===e.layout?"bar"!==e.type||"simpleHorizontalBar"!==e.layout&&"stackedHorizontalBar"!==e.layout||(D=void 0,A=void 0,D=e.xAxisDimension.split(",").length>1?"":this.getFormattedName(e.xAxisDimension),A=e.yAxisDimension.split(",").length>1?"":this.getFormattedName(e.yAxisDimension),this.seriesData=this.getHorizontalSeriesData(e),this.chartOption={title:{text:e.title,left:"center",textStyle:{overflow:"truncate"}},grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},legend:{show:!0,icon:e.legend.icon,orient:"horizontal",top:"10%",formatter:function(e){return e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}))},type:"scroll"},dataZoom:this.showZoomFeature(e.sliderZoom),xAxis:{type:this.getXAxisType(e)},yAxis:{type:this.getYAxisType(e),data:this.serviceData[e.listName].map((function(t){return v(e.yAxisDimension,t)}))},series:this.seriesData,toolbox:{feature:{dataZoom:{show:!0,yAxisIndex:"none"},restore:{},saveAsImage:{}}}},i.isDevMode()&&console.log("Horizontal chart for API",this.chartOption)):(this.seriesData=this.getSeriesData(e),D=void 0,A=void 0,D=e.xAxisDimension.split(",").length>1?"":this.getFormattedName(e.xAxisDimension),A=e.yAxisDimension.split(",").length>1?"":this.getFormattedName(e.yAxisDimension),this.chartOption={title:{text:e.title,left:"center"},legend:{icon:e.legend.icon,width:330,top:"10%",type:"scroll",formatter:function(e){var t=e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()}));return t.trim(),t}},tooltip:{trigger:"axis",axisPointer:{type:"cross"},confine:!0},dataZoom:this.showZoomFeature(e.sliderZoom),grid:{left:"10%",top:"20%",right:"10%",bottom:"15%",containLabel:!0},xAxis:{data:this.serviceData[e.listName].map((function(t){return t[e.xAxisDimension]})),type:this.getXAxisType(e)},yAxis:{type:this.getYAxisType(e)},series:this.seriesData,toolbox:{feature:{dataZoom:{show:e.boxZoom,yAxisIndex:"none"},restore:{},saveAsImage:{}}}},i.isDevMode()&&console.log("Simple bar or line chart for API",this.chartOption));return[2]}}))}))},e.prototype.getXAxisType=function(e){return e.xAxis},e.prototype.getYAxisType=function(e){return e.yAxis},e.prototype.getChartType=function(e){return e.type},e.prototype.getFormattedName=function(e){return e.split(".").slice(-1)[0].replace(/([A-Z])/g," $1").replace(/^./,(function(e){return e.toUpperCase()})).trim()},e.prototype.getEncodeData=function(e,t,i,a){var r=this;if("polar"===e.type)return[{coordinateSystem:"polar",name:e.xAxisDimension,type:e.layout,showSymbol:!0,encode:{radius:e.yAxisDimension,angle:e.xAxisDimension,tooltip:[e.yAxisDimension,e.xAxisDimension]},label:{show:e.showLabel},emphasis:{label:{show:!0}}}];if("scatter"===e.type){if("horizontalScatter"===e.layout){if(1===e.xAxisDimension.split(",").length)return[{type:e.type,symbolSize:e.scatterSymbolSize,datasetId:t,encode:{y:e.yAxisDimension,x:e.xAxisDimension,tooltip:[e.xAxisDimension,e.yAxisDimension]}}];var n=e.xAxisDimension.split(","),o=[];return n.forEach((function(i){o[i]={type:e.type,symbolSize:e.scatterSymbolSize,datasetId:t,encode:{y:e.yAxisDimension,x:n[i],tooltip:[n[i],e.yAxisDimension]},label:{show:e.showLabel},emphasis:{focus:"series",label:{show:!0},itemStyle:{shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}})),o}if(1===e.yAxisDimension.split(",").length)return[{type:e.type,symbolSize:e.scatterSymbolSize,datasetId:t,encode:{y:e.yAxisDimension,x:e.xAxisDimension,tooltip:[e.xAxisDimension,e.yAxisDimension]},label:{show:e.showLabel},emphasis:{focus:"series",label:{show:!0},itemStyle:{shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}];var s=e.yAxisDimension.split(","),l=[];return s.forEach((function(i){l[i]={type:e.type,symbolSize:e.scatterSymbolSize,datasetId:t,encode:{y:e.yAxisDimension,x:s[i],tooltip:[s[i],e.yAxisDimension]},label:{show:e.showLabel},emphasis:{focus:"series",label:{show:!0},itemStyle:{shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}})),l}if("radar"===e.type){var c=e.radarDimensions.split(",").reduce((function(e,t){return e[t]=[],e}),{});this.serviceData[e.listName].map((function(e){Object.keys(e).forEach((function(t){c[t]&&c[t].push(e[t])}))}));Object.values(c);var p=Object.keys(c).map((function(e){return{name:e,value:c[e]}}));return[{name:e.listName,type:"radar",data:p}]}if("bar"===e.type&&("simpleBar"===e.layout||"stackedBar"===e.layout)){if(1===e.yAxisDimension.split(",").length)return[{type:e.type,datasetId:t,name:a,encode:{x:i,y:a}}];var d=[];return a.array.forEach((function(n){d[n]={type:e.type,datasetId:t,stack:r.getStackName(e.stack,a[n]),name:a[n],encode:{x:i,y:a[n]}}})),d}if("bar"===e.type&&("simpleHorizontalBar"===e.layout||"stackedHorizontalBar"===e.layout)){if(1===e.xAxisDimension.split(",").length)return[{type:e.type,datasetId:t,name:i,encode:{x:i,y:a}}];var u=[];return i.foreach((function(n){u[n]={type:e.type,datasetId:t,stack:r.getStackName(e.stack,i[n]),name:i[n],encode:{x:i[n],y:a}}})),u}if("line"===e.type){if(1===e.yAxisDimension.split(",").length)return[{type:e.type,datasetId:t,smooth:e.smoothLine,areaStyle:e.area,name:a,encode:{x:i,y:a}}];var g=[];return a.forEach((function(r){g[r]={type:e.type,datasetId:t,smooth:e.smoothLine,areaStyle:e.area,name:a[r],encode:{x:i,y:a[r]}}})),g}if("pie"===e.type){var h=e.radius.split(","),m="",f=void 0;return"roseMode"===e.layout&&(m="rose"),f=void 0===e.pieBorderWidth&&void 0===e.pieBorderRadius?{}:e.pieBorderWidth>0&&void 0===e.pieBorderRadius?{borderColor:"#fff",borderWidth:e.pieBorderWidth}:void 0===e.pieBorderWidth&&e.pieBorderRadius>0?{borderRadius:e.pieBorderRadius}:{borderRadius:e.pieBorderRadius,borderColor:"#fff",borderWidth:e.pieBorderWidth},[{type:e.type,datasetId:t,radius:h,roseType:m,avoidLabelOverlap:!1,label:{show:!1,position:"center"},labelLine:{show:!1},itemStyle:f,emphasis:{itemStyle:{shadowBlur:10,shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}},name:e.pieSliceName,encode:{itemName:[e.pieSlicenName],value:e.pieSliceValue}}]}},e.prototype.getScatterChartSeriesData=function(e){var t=this;if("horizontalScatter"===e.layout){if(1===e.xAxisDimension.split(",").length)return[{type:e.type,symbolSize:e.scatterSymbolSize,data:this.serviceData[e.listName].map((function(t){return t[e.xAxisDimension]})),label:{show:e.showLabel},emphasis:{focus:"series",label:{show:!0},itemStyle:{shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}];var i=e.xAxisDimension.split(","),a=[];return i.forEach((function(r){a[r]={type:e.type,symbolSize:e.scatterSymbolSize,data:t.serviceData[e.listName].map((function(e){return e[i[r]]})),label:{show:e.showLabel},emphasis:{focus:"series",label:{show:!0},itemStyle:{shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}})),a}if(1===e.yAxisDimension.split(",").length)return[{type:e.type,symbolSize:e.scatterSymbolSize,data:this.serviceData[e.listName].map((function(t){return t[e.yAxisDimension]})),label:{show:e.showLabel},emphasis:{focus:"series",label:{show:!0},itemStyle:{shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}];var r=e.yAxisDimension.split(","),n=[];return r.forEach((function(i){n[i]={type:e.type,symbolSize:e.scatterSymbolSize,data:t.serviceData[e.listName].map((function(e){return e[r[i]]})),label:{show:e.showLabel},emphasis:{focus:"series",label:{show:!0},itemStyle:{shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}}}})),n},e.prototype.getPolarChartSeriesData=function(e){var t=[];return this.serviceData[e.listName].map((function(i){var a=[];a.push(i[e.xAxisDimension]),a.push(i[e.yAxisDimension]),t.push(a)})),[{coordinateSystem:"polar",name:e.xAxisDimension,type:e.layout,showSymbol:!0,data:t,label:{show:e.showLabel},emphasis:{label:{show:!0}}}]},e.prototype.getRadarSeriesData=function(e){var t=this,i=e.radarDimensions.split(","),a=i.reduce((function(e,t){return e[t]=[],e}),{});if(e.listName in this.serviceData)this.serviceData[e.listName].map((function(e){Object.keys(e).forEach((function(t){a[t]&&a[t].push(e[t])}))}));else for(var r=i.map((function(e,i){return{key:e,value:t.serviceData[0].indexOf(e)}})),n=function(e){r.forEach((function(i){a[i.key].push(t.serviceData[e][i.value])}))},o=1;o<this.serviceData.length;o++)n(o);var s=Object.keys(a).map((function(e){return{name:e,value:a[e]}}));return e.listName in this.serviceData?[{name:e.listName,type:"radar",data:s}]:[{type:"radar",data:s}]},e.prototype.createObject=function(e,t,i){var a=i.split(","),r=a.reduce((function(e,t){return e[t]=[],e}),{}),n=a.map((function(t,i){return{key:t,value:e.indexOf(t)}}));t.map((function(e,t){n.keys.forEach((function(t){r[t.key].push(e[t.value])}))}))},e.prototype.getPieChartSeriesData=function(e){var t,i=e.radius.split(","),a="";return"roseMode"===e.layout&&(a="rose"),t=void 0===e.pieBorderWidth&&void 0===e.pieBorderRadius?{}:e.pieBorderWidth>0&&void 0===e.pieBorderRadius?{borderColor:"#fff",borderWidth:e.pieBorderWidth}:void 0===e.pieBorderWidth&&e.pieBorderRadius>0?{borderRadius:e.pieBorderRadius}:{borderRadius:e.pieBorderRadius,borderColor:"#fff",borderWidth:e.pieBorderWidth},[{name:e.listName,type:"pie",radius:i,roseType:a,avoidLabelOverlap:!1,label:{show:!0,position:"center"},labelLine:{show:!1},itemStyle:t,emphasis:{itemStyle:{shadowBlur:10,shadowOffsetX:0,shadowColor:"rgba(0, 0, 0, 0.5)"}},data:this.serviceData[e.listName].map((function(t){return{value:t[e.pieSliceValue],name:e.pieSliceValue===e.pieSlicenName?e.pieSlicenName:t[e.pieSlicenName]}}))}]},e.prototype.getSeriesData=function(e){var t=this;if(1===e.yAxisDimension.split(",").length)return[{name:this.getFormattedName(e.yAxisDimension),data:this.serviceData[e.listName].map((function(t){return t[e.yAxisDimension]})),type:e.type,smooth:e.smoothLine,areaStyle:e.area}];var i=e.yAxisDimension.split(","),a=[];return i.forEach((function(r){a[r]={name:t.getFormattedName(e.yAxisDimensions[r]),stack:t.getStackName(e.stack,i[r]),emphasis:{focus:"series"},data:t.serviceData[e.listName].map((function(e){return e[i[r]]})),type:e.type,smooth:e.smoothLine,areaStyle:e.area}})),a},e.prototype.getDatasetDimensions=function(e){var t,i,a=[];return 1===e.yAxisDimension.split(",").length?(t=e.yAxisDimension,a.push(t)):a=x(a,t=e.yAxisDimension.split(",")),1===e.xAxisDimension.split(",").length?(i=e.xAxisDimension,a.push(i)):a=x(a,i=e.xAxisDimension.split(",")),a},e.prototype.getStackName=function(e,t){e.forEach((function(i){var a=e[i].stackValues.split(",");for(var r in a)if(a[r]===t)return e[i].stackName}))},e.prototype.getResultDimesions=function(e,t){var i=e.map((function(e){return{from:e.aggrDimesnion,method:e.aggrMethod}}));return i.push({from:t}),i},e.prototype.showZoomFeature=function(e){return e?[{type:"inside",xAxisIndex:0,minSpan:5},{type:"slider",xAxisIndex:0,minSpan:5,show:!0,height:20,top:"90%"}]:[]},e.prototype.getHorizontalSeriesData=function(e){var t=this;if(1===e.xAxisDimension.split(",").length)return[{name:this.getFormattedName(e.xAxisDimension),data:this.serviceData[e.listName].map((function(t){return v(e.xAxisDimension,t)})),label:{show:e.showLabel},emphasis:{focus:"series",label:{show:!0}},type:e.type,smooth:e.smoothLine,areaStyle:e.area}];var i=e.xAxisDimension.split(","),a=[];return i.forEach((function(r){a[r]={name:t.getFormattedName(e.xAxisDimensions[r]),stack:t.getStackName(e.stack,i[r]),label:{show:e.showLabel},emphasis:{label:{show:!0}},data:t.serviceData[e.listName].map((function(e){return v(i[r],e)})),type:e.type,smooth:e.smoothLine,areaStyle:e.area}})),a},e}();b.decorators=[{type:i.Component,args:[{selector:"lib-gp-smart-echart-widget",template:'\r\n\x3c!-- <div>\r\n    <lib-smart-chart-config (configData)="dataFromUser($event)"></lib-smart-chart-config>\r\n</div> --\x3e\r\n\r\n    <div style="display: block">\r\n\r\n        <div  echarts [options]="chartOption" class="demo-chart"\r\n        #chartBox></div>\r\n\r\n    </div>\r\n',styles:["gp-smart-echart-widget.component.css"]}]}],b.ctorParameters=function(){return[{type:g},{type:n.Realtime},{type:n.FetchClient}]},b.propDecorators={mapDivRef:[{type:i.ViewChild,args:["chartBox",{static:!0}]}],config:[{type:i.Input}]};var D=function(){},A=function(){},S={chartType:[{id:"bar",value:"Bar Chart"},{id:"line",value:"Line Chart"},{id:"pie",value:"Pie Chart"},{id:"radar",value:"Radar Chart"},{id:"polar",value:"Polar chart"},{id:"scatter",value:"Scatter Chart"}],chartLayout:[{id:"line",layout:[{id:"simple",value:"Simple Line Chart"},{id:"stacked",value:"Stacked Line Chart"}]},{id:"polar",layout:[{id:"line",value:"Line"},{id:"bar",value:"Bar"}]},{id:"bar",layout:[{id:"simpleBar",value:"Simple Bar Chart"},{id:"stackedBar",value:"Stacked Bar Chart"},{id:"simpleHorizontalBar",value:"Simple Horizontal Bar Chart"},{id:"stackedHorizontalBar",value:"Stacked Horizontal Bar Chart"}]},{id:"pie",layout:[{id:"simplePie",value:"Simple Pie Chart"},{id:"roseMode",value:"Rose Chart"}]},{id:"scatter",layout:[{id:"simpleScatter",value:"Simple Scatter Chart"},{id:"horizontalScatter",value:"Horizontal Scatter Chart"}]}],yAxisType:[{id:"value",value:"Value",disabled:!1},{id:"category",value:"Category",disabled:!1},{id:"time",value:"Time",disabled:!1}],xAxisType:[{id:"value",value:"Value",disabled:!1},{id:"category",value:"Category",disabled:!1},{id:"time",value:"Time",disabled:!1}],legendType:[{icon:"circle",value:"Circle"},{icon:"rect",value:"Rectangle"},{icon:"roundRect",value:"Round Rectangle"},{icon:"triangle",value:"Triangle"},{icon:"diamond",value:"Diamond"},{icon:"arrow",value:"Arrow"}],aggregateMethod:[{id:"sum",value:"Sum"},{id:"count",value:"Count"},{id:"Q1",value:"Q1"},{id:"median",value:"Q2 / Median"},{id:"Q3",value:"Q3"},{id:"first",value:"First"},{id:"average",value:"Average"},{id:"min",value:"Min"},{id:"max",value:"Max"}],listName:""},w=function(){function e(){this.flag=!1,this.config={listName:"",title:"",pieSlicenName:"",pieSliceValue:"",type:"",layout:"",dataSource:"",dataSourceValue:"",xAxis:"",yAxis:"",smoothLine:!1,apiUrl:"",area:!1,yAxisDimension:"",radarDimensions:"",addStack:!1,showApiInput:!1,stack:[],stackList:D[""],aggrArr:[],aggrList:A[""],legend:{icon:"",width:330,type:"scroll"},radius:[]},this.chartData=S,this.isGroupByInAggregate=!1,this.isAggrAdded=!1,this.configData=new i.EventEmitter}return e.prototype.ngOnInit=function(){this.aggregationMethods=S.aggregateMethod,this.config.aggrList=[],this.config.legend={}},e.prototype.stackAdded=function(e){this.config.stackList=[],e?(this.config.stackList.push(new D),this.config.stackList.push(new D)):this.config.stackList.length=0},e.prototype.deleteStackValue=function(e,t){this.config.stackList.splice(t,1)},e.prototype.updateStack=function(){this.config.apiUrl&&("bar"===this.config.type&&"stackedBar"===this.config.layout&&(0===this.config.stackList.length?this.config.stack="total":this.config.stackList.length>0?this.config.stack=this.config.stackList:this.config.stack=""),"line"===this.config.type&&"stackedLine"===this.config.layout&&(0===this.config.stackList.length?this.config.stack="total":this.config.stackList.length>0?this.config.stack=this.config.stackList:this.config.stack=""))},e.prototype.addAnotherStack=function(){this.config.stackList.push(new D)},e.prototype.addAnotherAggregate=function(){this.isAggrAdded=!0,this.config.aggrList.push(new A)},e.prototype.deleteAggrValue=function(e,t){this.config.aggrList.splice(t,1),0===this.config.aggrList.length&&(this.isAggrAdded=!1)},e.prototype.onSelection=function(e){var t=this;this.chartData.chartLayout.filter((function(i){e===i.id&&(t.chartLayoutData=i.layout)})),this.config.addStack=!1},e.prototype.onLayoutSelection=function(e){var t,i,a,r,n,o,s,l;if("simpleBar"===e||"stackedBar"===e||"simple"===e||"stacked"===e||"simpleScatter"===e){try{for(var c=f(this.chartData.yAxisType),p=c.next();!p.done;p=c.next()){"category"===(x=p.value).id&&(x.disabled=!0)}}catch(e){t={error:e}}finally{try{p&&!p.done&&(i=c.return)&&i.call(c)}finally{if(t)throw t.error}}try{for(var d=f(this.chartData.xAxisType),u=d.next();!u.done;u=d.next()){"category"===(x=u.value).id&&(x.disabled=!1)}}catch(e){a={error:e}}finally{try{u&&!u.done&&(r=d.return)&&r.call(d)}finally{if(a)throw a.error}}}else if("simpleHorizontalBar"===e||"stackedHorizontalBar"===e||"horizontalScatter"===e){try{for(var g=f(this.chartData.yAxisType),h=g.next();!h.done;h=g.next()){"category"===(x=h.value).id&&(x.disabled=!1)}}catch(e){n={error:e}}finally{try{h&&!h.done&&(o=g.return)&&o.call(g)}finally{if(n)throw n.error}}try{for(var m=f(this.chartData.xAxisType),y=m.next();!y.done;y=m.next()){var x;"category"===(x=y.value).id&&(x.disabled=!0)}}catch(e){s={error:e}}finally{try{y&&!y.done&&(l=m.return)&&l.call(m)}finally{if(s)throw s.error}}}},e.prototype.dataSourceSelection=function(e){"API"===e?(this.config.showApiInput=!0,this.config.showDatahubInput=!1):"datahub"===e?(this.config.showDatahubInput=!0,this.config.showApiInput=!1):(this.config.showApiInput=!1,this.config.showDatahubInput=!1)},e.prototype.SubmitData=function(){var e=this;this.config.aggrList.filter((function(t){t.aggrDimesnion===e.config.groupBy?e.isGroupByInAggregate=!0:e.isGroupByInAggregate=!1})),!0===this.config.area?this.config.area={}:this.config.area=null,this.isGroupByInAggregate||this.configData.emit(this.config)},e}();w.decorators=[{type:i.Component,args:[{selector:"lib-smart-chart-config",template:'<div class="form-group">\r\n    <div class="form-group">\r\n        <label for="title">Chart Title</label>\r\n        <input type="text" class="form-control" name="title" [(ngModel)]="config.title">\r\n        <div >\r\n            <label for="listname">List Name</label>\r\n            <input type="text" class="form-control" name="listname" [(ngModel)]="config.listName">\r\n        </div>\r\n    </div>\r\n  \r\n    <div class="form-group">\r\n        <form>\r\n            <label for="api" title="API URL" class="c8y-radio radio-inline">\r\n                <input type="radio" id="api" name="dataSource" value="API"\r\n                    (change)="dataSourceSelection($event.target.value)" [(ngModel)]="config.dataSource">\r\n                    <span></span>\r\n                    <span>API URL</span>\r\n                \r\n            </label>\r\n            \r\n            <label for="datahub" title="DataHub" class="c8y-radio radio-inline">\r\n                <input type="radio" id="datahub" name="dataSource" value="datahub"\r\n                    (change)="dataSourceSelection($event.target.value)" [(ngModel)]="config.dataSource" placeholder="Enter Relative URL">\r\n                    <span></span>\r\n                    <span>DataHub</span>\r\n\r\n            </label>\r\n        </form>\r\n        <ng-container *ngIf="config.showApiInput">\r\n            &nbsp;&nbsp;<input class="form-control" type="text" [(ngModel)]="config.apiUrl">\r\n        </ng-container>\r\n     \r\n        <ng-container *ngIf="config.showDatahubInput">\r\n            <input class="form-control" type="text" placeholder="Datahub URL" [(ngModel)]="config.apiUrl">\r\n            <div><textarea class="form-control" placeholder="Sql Query"  rows="3" cols="30" [(ngModel)]="config.sqlQuery"></textarea>\r\n            </div>\r\n        </ng-container>\r\n      \r\n    </div>\r\n    <div class="form-group">\r\n        <label for="type">Chart Type</label>\r\n        <div class="c8y-select-wrapper">\r\n            <select id="selectExample" class="form-control" name="type" (change)="onSelection($event.target.value)"\r\n                [(ngModel)]="config.type">\r\n                <option *ngFor="let chartType of chartData.chartType" value="{{chartType.id}}">{{chartType.value}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n        \x3c!-- dont show div if config.type is scatter or radar --\x3e\r\n        <div *ngIf=" config.type!==\'radar\'">\r\n            <label for="layout">Chart Layout</label>\r\n            <div class="c8y-select-wrapper">\r\n                <select name="layout" id="selectExample" class="form-control" [(ngModel)]="config.layout"\r\n                (change)="onLayoutSelection($event.target.value)">\r\n                    <option *ngFor="let chartLayout of chartLayoutData" value="{{chartLayout.id}}">{{chartLayout.value}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div *ngIf="config.type==\'pie\'">\r\n            <label for="listname">PieSliceValue</label>\r\n            <input type="text" class="form-control" name="listname" [(ngModel)]="config.pieSliceValue">\r\n            <label for="listname">PieSliceName</label>\r\n            <input type="text" class="form-control" name="listname" [(ngModel)]="config.pieSlicenName">\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf="config.type===\'line\'">\r\n        <label title="Area" class="c8y-checkbox">\r\n            <input type="checkbox" value="true" [(ngModel)]="config.area">\r\n            <span></span>\r\n            <span>Area</span>\r\n        </label>\r\n        <label title="Smooth Line" class="c8y-checkbox">\r\n            <input type="checkbox" value="true" [(ngModel)]="config.smoothLine">\r\n            <span></span>\r\n            <span>Smooth Line</span>\r\n        </label><br>\r\n    </div>\r\n    \x3c!-- dont show div if config.type is pie or radar --\x3e\r\n    <div class="form-group" *ngIf="config.type!==\'pie\'">\r\n        <div class="form-group" *ngIf="config.type!==\'polar\'">\r\n            <label for="xAxisType">X-Axis Type</label>\r\n            <div class="c8y-select-wrapper">\r\n                <select id="selectExample" class="form-control" name="xAxisType" [(ngModel)]="config.xAxis">\r\n                    <option *ngFor="let type of chartData.xAxisType" value="{{type.id}}"\r\n                    [disabled]=\'type.disabled\'>{{type.value}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <label for="xAxisDimension">X-Axis Dimension</label>\r\n        <input class="form-control" name="url" type="text" [(ngModel)]="config.xAxisDimension">\r\n    </div>\r\n\r\n    <div class="form-group" *ngIf="config.type!==\'pie\' && config.type!==\'radar\'">\r\n        <div class="form-group" *ngIf="config.type!==\'polar\'">\r\n            <label for="yAxisType">Y-Axis Type</label>\r\n            <div class="c8y-select-wrapper">\r\n                <select id="selectExample" class="form-control" name="yAxisType" [(ngModel)]="config.yAxis">\r\n                    <option *ngFor="let type of chartData.yAxisType" value="{{type.id}}"\r\n                    [disabled]=\'type.disabled\'>{{type.value}}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <label for="yAxisDimension">Y-Axis Dimension</label>\r\n        <input class="form-control" name="yAxisDimension" type="text" [(ngModel)]="config.yAxisDimension">\r\n    </div>\r\n\r\n    <div class="form-group" *ngIf="config.type==\'radar\'">\r\n        <label for="radarDimensions">Radar Dimensions</label>\r\n        <input class="form-control" name="radarDimensions" type="text" [(ngModel)]="config.radarDimensions">\r\n    </div>\r\n    \x3c!-- Dropdown for Aggregation / group by methods  --\x3e\r\n    <div *ngIf="config.type===\'pie\'||config.type===\'bar\'||config.type===\'line\' ||config.type===\'polar\' || config.type===\'scatter\' ">\r\n        <label for="aggregation">Aggregate Method</label>\r\n        <button type="button" class="btn btn-primary btn-xs" (click)="addAnotherAggregate()">+</button>\r\n\r\n        <ng-container *ngFor="let item of config.aggrList;let i = index">\r\n            <div class="form-group">\r\n                <label for="aggregateDimension">Dimension </label>\r\n                <input class="form-control" name="aggregateDimension" type="text"\r\n                    [ngClass]="{\'alertInput\': isGroupByInAggregate === true}"\r\n                    [(ngModel)]="config.aggrList[i].aggrDimesnion">\r\n\r\n                <label for="aggregation">Method</label>\r\n                <select name="aggregation" id="selectMethod" class="form-control"\r\n                    [(ngModel)]="config.aggrList[i].aggrMethod">\r\n                    <option *ngFor="let method of aggregationMethods" value="{{method.id}}">{{method.value}}\r\n                    </option>\r\n                </select>\r\n\r\n\r\n                <button class="btn btn-primary btn-xs btn-danger" (click)="deleteAggrValue($event,i)">-</button>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <div class="form-group" *ngIf="isAggrAdded">\r\n            <label for="groupByDimension">Group By</label>\r\n            <input class="form-control" name="groupByDimension" type="text" [(ngModel)]="config.groupBy">\r\n\r\n        </div>\r\n    </div>\r\n\r\n    \x3c!-- Dropdown for Legend Icon --\x3e\r\n    <label for="legend">Legend config</label>\r\n    <div class="c8y-select-wrapper">\r\n        <select name="legend" id="LegendSelect" class="form-control" [(ngModel)]="config.legend.icon">\r\n            <option *ngFor="let legendType of chartData.legendType" value="{{legendType.icon}}">{{legendType.value}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n    \x3c!-- Pie chart options --\x3e\r\n    <div id="pie-option-conatiner" *ngIf="config.type===\'pie\'">\r\n        <label for="radius">Pie Radius</label>\r\n        <div>\r\n            <input class="form-control" name="radius" type="text" placeholder="0%,100%" [(ngModel)]="config.radius">\r\n        </div>\r\n    </div>\r\n    <div class="form-group" *ngIf="config.type===\'pie\'">\r\n        <label for="pieConfig">Pie Slice Config</label>\r\n        <div>\r\n        <label for="pieBorderRadius">Border Radius</label>\r\n            <input class="form-control" name="pieBorderRadius" type="number" min=\'0\' max=\'30\' placeholder="0" value="0" [(ngModel)]="config.pieBorderRadius">\r\n       \r\n        <label for="pieBorderWidth">Border Width</label>\r\n            <input class="form-control" name="pieBorderWidth" type="number" min=\'0\' max=\'30\' placeholder="0"  value="0"[(ngModel)]="config.pieBorderWidth">\r\n        </div>\r\n     </div>\r\n\r\n    \x3c!-- For scatter bubble size --\x3e\r\n    <div *ngIf="config.type===\'scatter\'">\r\n        <label title="Bubble Size"for="symbolSize">Bubble Size</label>\r\n        <input class="form-control" name="symbolSize" type="number" placeholder="Enter a number"\r\n            [(ngModel)]="config.scatterSymbolSize" min="5" max="20">\r\n\r\n    </div>\r\n    \x3c!-- stack container --\x3e\r\n    <div id="stack-conatiner" *ngIf="config.type===\'line\' || config.type===\'bar\'">\r\n        <div id="stack-container" *ngIf="config.layout===\'stacked\' || config.layout===\'stackedBar\'">\r\n            <div style="margin-right: 0px;">\r\n                <label class="c8y-checkbox checkbox-inline" title="addStack">\r\n                    <input type="checkbox" value="Add Stack" [(ngModel)]="config.addStack"\r\n                        (click)="stackAdded($event.target.checked)">\r\n                    <span></span>\r\n                    <span>Add Stack</span>\r\n                </label>\r\n            </div>\r\n            <div *ngIf="config.addStack">\r\n                <button type="button" class="btn btn-primary btn-xs" (click)="addAnotherStack()">Add\r\n                    Another Stack</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf="config.type===\'line\'  || config.type===\'scatter\'  || config.type===\'bar\'">\r\n        <label title="Slider Zoom" class="c8y-checkbox">\r\n            <input type="checkbox" value="false" [(ngModel)]="config.sliderZoom" >\r\n            <span></span>\r\n            <span>Slider Zoom</span>\r\n        </label>\r\n        <label title="Box Zoom" class="c8y-checkbox">\r\n            <input type="checkbox" value="false" [(ngModel)]="config.boxZoom">\r\n            <span></span>\r\n            <span>Box Zoom</span>\r\n        </label>\r\n    </div>\r\n    <div *ngIf="config.layout===\'stacked\' || config.layout===\'stackedBar\'">\r\n        <div *ngIf="config.addStack">\r\n            <ng-container *ngFor="let item of config.stackList;let i = index">\r\n                <div class="form-group">\r\n                    <label for="stackName">Stack Name</label>\r\n                    <div>\r\n                        <input class="form-control" name="stackName" type="text"\r\n                            [(ngModel)]="config.stackList[i].stackName">\r\n                    </div>\r\n                    <label for="stackValues">Stack Values</label>\r\n                    <div>\r\n                        <input class="form-control" name="stackValues" type="text"\r\n                            [(ngModel)]="config.stackList[i].stackValues">\r\n                    </div>\r\n                    <div>\r\n                        <button class="btn btn-primary btn-xs btn-danger" (click)="deleteStackValue($event,i)">Delete\r\n                            Stack</button>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n            <button type="button" class="btn btn-primary btn-xs" (click)="updateStack()">update</button>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\x3c!-- <div>\r\n    <input type="submit" (click)="SubmitData()" value="Submit" />\r\n</div> --\x3e',styles:["div{margin-top:5px;margin-right:5px;margin-bottom:5px}.alertInput{border:2px solid red}"]}]}],w.ctorParameters=function(){return[]},w.propDecorators={config:[{type:i.Input}],configData:[{type:i.Output}]};var k={id:"smart.echart",label:"Smart eChart",description:"linechart derived from api data",previewImage:"",component:b,configComponent:w,data:{ng1:{options:{noDeviceTarget:!1,noNewWidgets:!1,deviceTargetNotRequired:!0,groupsSelectable:!0}}}},L=function(){};L.decorators=[{type:i.NgModule,args:[{declarations:[b,w],imports:[o.CoreModule,s.NgxEchartsModule.forRoot({echarts:d})],schemas:[i.CUSTOM_ELEMENTS_SCHEMA],providers:[g,{provide:o.HOOK_COMPONENTS,multi:!0,useValue:k}],exports:[b,w],entryComponents:[b,w]}]}],e.GpSmartEchartWidgetComponent=b,e.GpSmartEchartWidgetModule=L,e.GpSmartEchartWidgetService=g,e["ɵ0"]=k,e["ɵa"]=w,e["ɵb"]="",Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=custom-widget.umd.min.js.map